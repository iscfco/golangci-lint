[output]
format = "colored-line-number"

[linters]
enable = [
    # Visit https://golangci-lint.run/usage/linters/
    # for the full, current list of available linters.
    
    # Default linters
    "errcheck", # Detect unchecked errors
    "gosimple", # Suggest code simplifications
    "govet", # Reports suspicious constructs
    "ineffassign", # Detects unused variable assignments
    "staticcheck", # go vet on steroids
    "unused", # Detect unused constants, variables, functions and types
    "stylecheck", # Stylecheck is a replacement for golint.

    # Suggested additional linters
    "gocyclo", # or "cyclop", # Detect cyclomatic complexity
    "goconst", # Detect repeated values that can be made constants
    "gofumpt", # Or "gofmt", # Enforce standard formatting
    "goimports", # Ensure standard import formatting/ordering
    "misspell", # Fix spelling errors
    "revive",  # General purpose linter    
    "unconvert", # Detect unnecessary type conversions
    "unparam", # Detect unused function parameters
    "errname", # Checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error
    "errorlint", # Errorlint is a linter for that can be used to find code that will cause problems with the error wrapping scheme introduced in Go 1.13.
    "forcetypeassert", # Finds forced type assertions
    "gocritic", # Highly extensible Go source code linter providing checks currently missing from other linters.
    "godox", # Tool for detection of FIXME, TODO and other comment keywords.
    "gosec", # Inspects source code for security problems.
    "inamedparam", # Reports interfaces with unnamed method parameters
    "loggercheck", # Checks key value pairs for common logger libraries (kitlog,klog,logr,zap).
    "prealloc", # Finds slice declarations that could potentially be pre-allocated.
    "usestdlibvars", # A linter that detect the possibility to use variables/constants from the Go standard library.

    # Optional
    "bodyclose", # Check whether HTTP response bodies are closed
    # "goerr113", # Enforce standard error handling practices
    # "depguard", # Forbid certain package imports
    # "dupl", # Detect duplicate code
    # "errchkjson", # some JSON-specific checks
    # "gomnd", # Magic number detection
    "nakedret", # Detect naked returns
    # "rowserrcheck", # Check whether Err of rows is checked
    # "sqlclosecheck", # Ensure sql.Rows and sql.Stmt are closed
    "tparallel", # Detects inappropriate use of t.Parallel()
    "nestif", # Reports deeply nested if statements.
    "perfsprint", # Checks that fmt.Sprintf can be replaced with a faster alternative
    # "tagliatelle", # Checks the struct tags.
    "testifylint", # Checks usage of github.com/stretchr/testify.
]

[issues]
exclude-use-default = false
